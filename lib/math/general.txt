Linear sieve + mobius:
void sieve() {
    vector<int> primes, lp(MAXN), mobius(MAXN);
    mobius[1] = 1;
    for(int i = 2; i < MAXN; i++) {
        if(!lp[i]) {
            lp[i] = i;
            mobius[i] = -1;
            primes.push_back(i);
        }

        for(int &j : primes) {
            if(j * i >= MAXN)
                break;

            lp[j * i] = j;
            if(lp[i] == j)
                break;

            mobius[j * i] = -mobius[i];
        }
    }
}

Mobius - Inclusion Exclusion:
1 if n is 1
0 if n has a squared prime factor
(-1)^k if n is a produt of k distinct prime factors

Use it when trying to count number of guys with "at least" X characteristics.

mobius[1] = -1;
for (int i = 1; i < VALMAX; i++) {
	if (mobius[i]) {
		mobius[i] = -mobius[i];
		for (int j = 2 * i; j < VALMAX; j += i) { mobius[j] += mobius[i]; }
	}
}

Extended Euclides Algorithm
Gives {x, y, gcd(a, b)} in ax + by = gcd(a, b);
To ax + by = c have solution, c must be multiple of gcd(a, b)
a(x + b/(gcd(a, b))) + (y - a/(gcd(a, b))) and a(x - b/(gcd(a, b))) + (y + a/(gcd(a, b))) is also a solution.

It also gives the inverse modular of a mod m if gcd(a, m) = 1

array<int, 3> euclides(int a, int b) {
    if (!b)
        return {1, 0, a};

    array<int, 3> prev = euclides(b, a % b);
    return {prev[1], prev[0] - (a / b) * prev[1], prev[2]};
}

Sum of Divisors of N

Let N = P^k * Q'^z where p and q are primes

Sum of Divisors = P^(k + 1)/(P - 1) * Q^(z + 1)/(Q - 1);

NlogN code:

int ans = 1;
while(n > 1) {
    int p = lp[n];
    int sum = ans;
    
    int aux = 1;
    while(n % p == 0) {
        n /= p;
        aux *= p;
        ans += sum * aux;
    }
}

Multionmial (n | k1, k2, k3, ..., kn)
Ways of dividing N into sets of size k1, k2, k3, ..., kn such that k1 + k2 + ... + kn = N
= n1!/(k1! * k2! * k3! * k4!!)

Dearrangements
Number of permutations where no element keeps its original position
-> Use inclusion-exclusion prinicipial or

f(n) = {
    0, n = 1
    1, n = 2
    (n - 1)(f(n - 2) + f(n - 1)), n > 2
}


Burnside lemma:
The number of objects equals the average of simmetrycal pictures for every simmetries

The problem example is coloring a 3x3 table, and if a table is equal to the other one by rotating it, they are the same
There are 5^9 simmetries for rotating 0 degrees, 5^3 90 degrees, 5^5 180 degrees and 5^3 270 degrees so the total number of pictures is
(5^9 + 5^3 + 5^5 + 5^3)/4, just see how many squares are free and how many are determined by simmetry

Hockey Sticky Identity
Summatory(k = r -> n) of C(k, r) = C(n + 1, r + 1);
Example: n = 10, r = 5 -> C(5, 5) + C(6, 5) + C(7, 5) + C(8, 5) + C(9, 5) + C(10, 5) = C(11, 6);

Also, from simmetry: C(4, 0) = C(4, 4) so:
C(4, 0) + C(5, 1) + C(6, 2) + C(7, 3) + C(8, 4) + C(9, 5) = C(10, 5) =
C(4, 4) + C(5, 4) + C(6, 4) + ... + C(8, 4) + C(9, 4) = C(10, 5);

Chicken Mcnugget Theorem 
Let M, N be coprimes, for any integer a and b

MN - M - N is the biggest number that doesn't have solution to
aM + bN = X

Also, there is (M - 1)(N - 1)/2 impossible solutions

If they are not coprime, then
lcm(M, N) - M - N is the biggest one, and every multiple of gcd(M, N) bigger than that is representable

Sum of squares
n(n + 1)(2n + 1)/6

Geometric progression sum
Sn = a1(q^n - 1)/(q - 1)

Sinfinite = a1/(1 - q) but q must be -1 < q < 1


Number Of Divisors in O(N^(1/3)):
Let N = X * Y where X contain primes < than N^(1/3) and Y primes > N ^ (1/3)
f(x) = number of divisors of X 
f(X * Y) = f(X) * f(Y) if gcd(X, Y) = 1


Catalan Numbers

They count the number of sequences such that all subsequences [1, k] obey
a1 + a2 + a3 + ... + ak >= 0

Examples:
Parenthesis, supposing each '(' as +1 and each ')' as -1

Recurrence:
Cn = sum of C[n - k] * C[k] from k = 0 to n

Formula:
Cn = (2n, n) * 1/(n + 1);

